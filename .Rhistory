xtabs(Proportion~Group.F+Category,WisMor.long)
plot(xtabs(Proportion~Category+Group.F,WisMor.long))
assocstats(xtabs(Proportion~Group.F+Category,WisMor.long))
Wis.Mor.Summary.country<-WisMor.long %>%
filter(!is.na(CountryCode))%>%
group_by(CountryCode,Group.F, Category) %>%
summarise(Prop = mean(Proportion)) %>%
mutate(Percent = Prop*100) %>% ungroup() %>%  arrange(CountryCode,Group.F, Percent)
plot(xtabs(Proportion~CountryCode+Group.F+Category,WisMor.long))
assocstats(xtabs(Proportion~Group.F+Category+CountryCode,WisMor.long))
ggplot(Wis.Mor.Summary.country, aes(x=Category, y=Percent, color=Group.F)) +
geom_point(size=3) +
geom_segment(aes(x=Category,
xend=Category,
y=0,
yend=Percent)) + facet_wrap(vars(CountryCode))+
theme(axis.text.x = element_text(angle=65, vjust=0.6))+geom_hline(yintercept =50, linetype='dashed', color='black', 14)+theme(legend.position="top")+
scale_color_aaas()+ labs(colour = "Group",x="",y="% of the Sample")
ggplot(Wis.Mor.Summary.country, aes(x=Category, y=Percent, color=Group.F)) +
geom_point(size=3) +
geom_segment(aes(x=Category,
xend=Category,
y=0,
yend=Percent)) + facet_wrap(vars(CountryCode))+
theme(axis.text.x = element_text(angle=65, vjust=0.6))+geom_hline(yintercept =50, linetype='dashed', color='black', 14)+theme(legend.position="top")+
scale_color_aaas()+ labs(colour = "Group",x="",y="% of the Sample")
#how many responses?
length(WisMor$M2W_Necessary)
names(data)
#Importing Packages, Data----
rm(list=ls())
library(tidyverse)
library(tm)
library(stringr)
library(tidytext)
library(kableExtra)
library(ggplot2)
library(kableExtra)
library(ggsci)
library(vcd)
setwd("~/GitHub/wisdom-summit-2021")
raw <- read.csv('2021 Wisdom Summit_August 27, 2021_21.22.csv')
culture<-read.csv('culture.csv')
morality<-read.csv('morality.csv')
total<-raw %>% left_join(culture) %>% left_join(morality)
#Adding Variables ----
total <- total %>% filter(!grepl("progress",Progress, ignore.case = TRUE)) %>%
rename(Duration=Duration..in.seconds.)
total$Duration <- as.numeric(raw$Duration)
total <- total %>%
mutate(filter = ifelse(str_detect(wisdom_culture, "useless|1"), 1, 0)) %>%
mutate(filter = ifelse(!is.na(country) & str_detect(country, "TEST"), 1, filter)) %>%
mutate(filter = ifelse(Duration < 45, 1, filter)) #if they spent less than 45 seconds, remove them
total$filter <- as.factor(total$filter)
# summary(raw$filter)
data <- total %>% filter(filter==0)
data <- data %>%
mutate(position2 = ifelse(position == "Other" &
str_detect(position_8_TEXT,"Lecturer|Emeritus|senior lecturer|On sabbatical"),
"Professor",position))%>%
mutate(position2 = ifelse(position == "Other" &
str_detect(position_8_TEXT, "PhD scholar|RA|scientist|psychologist|Associate"),
"Graduate Student",position2))
# data%>%filter(position == "Other") %>% select(position,position_8_TEXT, education, position2)
USlist <- c("US", "us", "Usa", "United States of America","united States", "United States", "The United States of America")
UKlist <- c("UK","united kingdom", "United Kingdom", "England")
data$country <- data$country %>% str_trim()
data <- data %>%
mutate(country = ifelse(country %in% USlist,"USA", country))%>%
mutate(country = ifelse(country %in% UKlist, "UK", country))%>%
mutate(country = ifelse(country =="BG", "Bulgaria", country)) %>%
mutate(country = ifelse(country =="CHINA", "China", country)) %>%
mutate(country = ifelse(country =="canada", "Canada", country)) %>%
mutate(country = ifelse(country == "HK", "Hong Kong", country)) %>%
mutate(country = ifelse(country == "Russian Federation", "Russia", country)) %>%
mutate(country = ifelse(country == "Viet Nam", "Vietnam", country)) %>%
mutate(country = ifelse(country == "turkey", "Turkey", country))
data <- data %>%
mutate(position2= ifelse(str_detect(position2,"Professor"), "Professor", "Not a Professor"))
data <- data %>%
mutate(CountryCode= ifelse(str_detect(country,"USA|Canada"), "USA & Canada", "Others"))
cols <- c("country","CountryCode","position","position2")
data[,cols] <- lapply(data[,cols],as.factor)
data <- data %>%
mutate_all(na_if,"")
Moral.open <- data %>%
filter(!is.na(morality_wis_analogy) |
!is.na(moral_wis_comments) |
!is.na(wis_psych_char)) %>%
select(CountryCode,Progress, Duration,position2,ResponseId,field,prior_research:education,
FRMW_FINAL,  FRWM_FINAL, FRJF_FINAL,TRMW_FINAL,TRWM_FINAL,TRHOC_FINAL,PR_FINAL,DR_FINAL,FM_FINAL,PROCESS.MECH_FINAL,PROCESS.LIFE_FINAL,CONSTRUCT_FINAL)%>%
rename(Position = position2, Education = education, Field = field)
#how many responses?
length(Moral.open$FRMW_FINAL)
VIew(Moral.open)
View(Moral.open)
Moral.open <- data %>%
filter(!is.na(morality_wis_analogy) |
!is.na(moral_wis_comments) |
!is.na(wis_psych_char)) %>%
select(CountryCode,Progress, Duration,position2,ResponseId,field,prior_research:education,moral_wis_comments,morality_wis_analogy,wis_psych_char,
FRMW_FINAL,  FRWM_FINAL, FRJF_FINAL,TRMW_FINAL,TRWM_FINAL,TRHOC_FINAL,PR_FINAL,DR_FINAL,FM_FINAL,PROCESS.MECH_FINAL,PROCESS.LIFE_FINAL,CONSTRUCT_FINAL)%>%
rename(Position = position2, Education = education, Field = field)
View(Moral.open)
Moral.open <- data %>%
filter(!is.na(FRMW_FINAL)) %>%
select(CountryCode,Progress, Duration,position2,ResponseId,field,prior_research:education,moral_wis_comments,morality_wis_analogy,wis_psych_char,
FRMW_FINAL,  FRWM_FINAL, FRJF_FINAL,TRMW_FINAL,TRWM_FINAL,TRHOC_FINAL,PR_FINAL,DR_FINAL,FM_FINAL,PROCESS.MECH_FINAL,PROCESS.LIFE_FINAL,CONSTRUCT_FINAL)%>%
rename(Position = position2, Education = education, Field = field)
#how many responses?
length(Moral.open$FRMW_FINAL)
#Importing Packages, Data----
rm(list=ls())
library(tidyverse)
library(tm)
library(stringr)
library(tidytext)
library(kableExtra)
library(ggplot2)
library(kableExtra)
library(ggsci)
library(vcd)
setwd("~/GitHub/wisdom-summit-2021")
raw <- read.csv('Wisdom_Summit_Sept_21_2021.csv')
culture<-read.csv('culture.csv')
morality<-read.csv('morality.csv')
total<-raw %>% left_join(culture) %>% left_join(morality)
#Adding Variables ----
total <- total %>% filter(!grepl("progress",Progress, ignore.case = TRUE)) %>%
rename(Duration=Duration..in.seconds.)
total$Duration <- as.numeric(raw$Duration)
total <- total %>%
mutate(filter = ifelse(str_detect(wisdom_culture, "useless|1"), 1, 0)) %>%
mutate(filter = ifelse(!is.na(country) & str_detect(country, "TEST"), 1, filter)) %>%
mutate(filter = ifelse(Duration < 45, 1, filter)) #if they spent less than 45 seconds, remove them
total$filter <- as.factor(total$filter)
# summary(raw$filter)
data <- total %>% filter(filter==0)
data <- data %>%
mutate(position2 = ifelse(position == "Other" &
str_detect(position_8_TEXT,"Lecturer|Emeritus|senior lecturer|On sabbatical"),
"Professor",position))%>%
mutate(position2 = ifelse(position == "Other" &
str_detect(position_8_TEXT, "PhD scholar|RA|scientist|psychologist|Associate"),
"Graduate Student",position2))
# data%>%filter(position == "Other") %>% select(position,position_8_TEXT, education, position2)
USlist <- c("US", "us", "Usa", "United States of America","united States", "United States", "The United States of America")
UKlist <- c("UK","united kingdom", "United Kingdom", "England")
data$country <- data$country %>% str_trim()
data <- data %>%
mutate(country = ifelse(country %in% USlist,"USA", country))%>%
mutate(country = ifelse(country %in% UKlist, "UK", country))%>%
mutate(country = ifelse(country =="BG", "Bulgaria", country)) %>%
mutate(country = ifelse(country =="CHINA", "China", country)) %>%
mutate(country = ifelse(country =="canada", "Canada", country)) %>%
mutate(country = ifelse(country == "HK", "Hong Kong", country)) %>%
mutate(country = ifelse(country == "Russian Federation", "Russia", country)) %>%
mutate(country = ifelse(country == "Viet Nam", "Vietnam", country)) %>%
mutate(country = ifelse(country == "turkey", "Turkey", country))
data <- data %>%
mutate(position2= ifelse(str_detect(position2,"Professor"), "Professor", "Not a Professor"))
data <- data %>%
mutate(CountryCode= ifelse(str_detect(country,"USA|Canada"), "USA & Canada", "Others"))
cols <- c("country","CountryCode","position","position2")
data[,cols] <- lapply(data[,cols],as.factor)
data <- data %>%
mutate_all(na_if,"")
WisMor <- data %>%
filter(!is.na(morality_wis_analogy) |
!is.na(wis_psych_char) |
!is.na(model_agreement) |
!is.na(model_disagree) |
!is.na(wisdom_culture)) %>%
select(CountryCode,Progress, Duration,position2,ResponseId,field,prior_research:education,
moral_to_wis_agree, wis_to_moral_agree, morality_wis_analogy,wis_psych_char,wisdomModelFamiliar) %>%
rename(Position = position2, Education = education, Field = field)
WisMor <- WisMor %>%
mutate(M2W_Relevant = ifelse(str_detect(moral_to_wis_agree, "relevant"), 1, 0))%>%
mutate(M2W_Precursor = ifelse(str_detect(moral_to_wis_agree, "precursor"), 1, 0))%>%
mutate(M2W_Necessary = ifelse(str_detect(moral_to_wis_agree, "necessary"), 1, 0))%>%
mutate(M2W_Sufficient = ifelse(str_detect(moral_to_wis_agree, "sufficient"), 1,0))%>%
mutate(M2W_Unrelated = ifelse(is.na(moral_to_wis_agree), 1, 0))%>%
mutate(W2M_Relevant = ifelse(str_detect(wis_to_moral_agree, "relevant"), 1, 0))%>%
mutate(W2M_Precursor = ifelse(str_detect(wis_to_moral_agree, "precursor"), 1, 0))%>%
mutate(W2M_Necessary = ifelse(str_detect(wis_to_moral_agree, "necessary"), 1, 0))%>%
mutate(W2M_Sufficient = ifelse(str_detect(wis_to_moral_agree, "sufficient"), 1, 0))%>%
mutate(W2M_Unrelated = ifelse(is.na(wis_to_moral_agree), 1, 0)) %>%
mutate(M2W_Relevant = coalesce(M2W_Relevant, 0),
M2W_Precursor = coalesce(M2W_Precursor, 0),
M2W_Necessary = coalesce(M2W_Necessary, 0),
M2W_Sufficient = coalesce(M2W_Sufficient, 0),
W2M_Relevant = coalesce(W2M_Relevant, 0),
W2M_Precursor= coalesce(W2M_Precursor, 0),
W2M_Necessary = coalesce(W2M_Necessary, 0),
W2M_Sufficient = coalesce(W2M_Sufficient, 0))
#how many responses?
length(WisMor$M2W_Necessary)
WisMor.long<-WisMor %>% pivot_longer(M2W_Relevant:W2M_Sufficient,names_sep="_",names_to=c("Group","Category"),values_to="Proportion")
WisMor.long$Group.F[WisMor.long$Group=="M2W"]<-"Morality to Wisdom"
WisMor.long$Group.F[WisMor.long$Group=="W2M"]<-"Wisdom to Morality"
Wis.Mor.Summary<-WisMor.long %>%
group_by(Group.F, Category) %>%
summarise(Prop = mean(Proportion)) %>%
mutate(Percent = Prop*100) %>% ungroup() %>%  arrange(Group.F, Percent)
Wis.Mor.Summary
morals <- Wis.Mor.Summary %>%
# 1. Remove grouping
ungroup() %>%
# 2. Arrange by
#   i.  facet group
#   ii. bar height
arrange(Group.F, Percent) %>%
# 3. Add order column of row numbers
mutate(order = row_number())
#lollipop chart
morals %>% ggplot(aes(x=order, y=Percent, color=Group.F)) +
geom_point(size=3) +
geom_segment(aes(x=order,
xend=order,
y=0,
yend=Percent)) +facet_wrap(vars(Group.F), scales = "free")+
scale_x_continuous(   # Add categories to axis
breaks = morals$order,
labels = morals$Category)+theme_minimal(base_size = 14) +geom_hline(yintercept =50, linetype='dashed', color='black', 14)+theme(legend.position="none")+
scale_color_aaas()+ labs(colour = "Group",x="",y="% of the Sample")
morals
morals %>% ggplot(aes(x=order, y=Percent, color=Group.F)) +
geom_point(size=3) +
geom_segment(aes(x=order,
xend=order,
y=0,
yend=Percent)) +facet_wrap(vars(Group.F), scales = "free")+
scale_x_continuous(   # Add categories to axis
breaks = morals$order,
labels = morals$Category)+theme_minimal(base_size = 14) +geom_hline(yintercept =50, linetype='dashed', color='black', 14)+theme(legend.position="none")+
scale_color_aaas()+ labs(colour = "Group",x="",y="% of the Sample")
xtabs(Proportion~Group.F+Category,WisMor.long)
plot(xtabs(Proportion~Category+Group.F,WisMor.long))
assocstats(xtabs(Proportion~Group.F+Category,WisMor.long))
Wis.Mor.Summary.position<-WisMor.long %>%
group_by(Position,Group.F, Category) %>%
summarise(Prop = mean(Proportion)) %>%
mutate(Percent = Prop*100) %>% ungroup() %>%  arrange(Position,Group.F, Percent)
plot(xtabs(Proportion~Position+Group.F+Category,WisMor.long))
assocstats(xtabs(Proportion~Group.F+Category+Position,WisMor.long))
ggplot(Wis.Mor.Summary.position, aes(x=Category, y=Percent, color=Group.F)) +
geom_point(size=3) +
geom_segment(aes(x=Category,
xend=Category,
y=0,
yend=Percent)) + facet_wrap(vars(Position))+
theme(axis.text.x = element_text(angle=65, vjust=0.6))+geom_hline(yintercept =50, linetype='dashed', color='black', 14)+theme(legend.position="top")+
scale_color_aaas()+ labs(colour = "Group",x="",y="% of the Sample")
ggplot(Wis.Mor.Summary.position, aes(x=Category, y=Percent, color=Group.F)) +
geom_point(size=3) +
geom_segment(aes(x=Category,
xend=Category,
y=0,
yend=Percent)) + facet_wrap(vars(Position))+
theme(axis.text.x = element_text(angle=65, vjust=0.6))+geom_hline(yintercept =50, linetype='dashed', color='black', 14)+theme(legend.position="top")+
scale_color_aaas()+ labs(colour = "Group",x="",y="% of the Sample")
Wis.Mor.Summary.country<-WisMor.long %>%
filter(!is.na(CountryCode))%>%
group_by(CountryCode,Group.F, Category) %>%
summarise(Prop = mean(Proportion)) %>%
mutate(Percent = Prop*100) %>% ungroup() %>%  arrange(CountryCode,Group.F, Percent)
plot(xtabs(Proportion~CountryCode+Group.F+Category,WisMor.long))
assocstats(xtabs(Proportion~Group.F+Category+CountryCode,WisMor.long))
ggplot(Wis.Mor.Summary.country, aes(x=Category, y=Percent, color=Group.F)) +
geom_point(size=3) +
geom_segment(aes(x=Category,
xend=Category,
y=0,
yend=Percent)) + facet_wrap(vars(CountryCode))+
theme(axis.text.x = element_text(angle=65, vjust=0.6))+geom_hline(yintercept =50, linetype='dashed', color='black', 14)+theme(legend.position="top")+
scale_color_aaas()+ labs(colour = "Group",x="",y="% of the Sample")
ggplot(Wis.Mor.Summary.country, aes(x=Category, y=Percent, color=Group.F)) +
geom_point(size=3) +
geom_segment(aes(x=Category,
xend=Category,
y=0,
yend=Percent)) + facet_wrap(vars(CountryCode))+
theme(axis.text.x = element_text(angle=65, vjust=0.6))+geom_hline(yintercept =50, linetype='dashed', color='black', 14)+theme(legend.position="top")+
scale_color_aaas()+ labs(colour = "Group",x="",y="% of the Sample")
#Subsetting ----
#Select where respondents have assigned items to at least 1 category
data <- data %>%
mutate(ans = ifelse(is.na(universals_sorting_0_GROUP) & is.na(universals_sorting_1_GROUP) & is.na(universals_sorting_2_GROUP) & is.na(universals_sorting_3_GROUP), 0, 1))
for (i in 1:nrow(data)){
data$NEmpty[i] <- sum(is.na(data[i,c("universals_sorting_0_GROUP","universals_sorting_1_GROUP","universals_sorting_2_GROUP", "universals_sorting_3_GROUP")]))
}
Univ <- data %>%
filter(!is.na(wisdom_culture)|
!is.na(universals_sorting_0_GROUP) |
!is.na(universals_sorting_1_GROUP) |
!is.na(universals_sorting_2_GROUP) |
!is.na(universals_sorting_3_GROUP)) %>%
filter(ResponseId !="R_2XdqUYSGdFotixV")  %>%
select(country,ResponseId,field,prior_research:position_8_TEXT,
universals_sorting_0_GROUP:universals_sorting_3_17_RANK)
Univ <- Univ %>% mutate(across(universals_sorting_0_1_RANK:universals_sorting_3_17_RANK, ~ ifelse(is.na(.x), 0, .x)))
univ2 <- Univ %>% select(ResponseId,universals_sorting_0_1_RANK:universals_sorting_3_17_RANK)%>%
pivot_longer(names_to = "Group", values_to = "Rank",   universals_sorting_0_1_RANK:universals_sorting_3_17_RANK) %>%
mutate(Group2 = ifelse(str_detect(Group,"universals_sorting_0"), "Non-Universals", Group)) %>%
mutate(Group2 = ifelse(str_detect(Group,"universals_sorting_1"), "Existential Universal", Group2)) %>%
mutate(Group2 = ifelse(str_detect(Group,"universals_sorting_2"), "Functional Universal", Group2)) %>%
mutate(Group2 = ifelse(str_detect(Group,"universals_sorting_3"), "Accessibility Universal", Group2))%>%
mutate(Item = substr(Group, start=22,stop=23))
univ2$Item <- str_remove(univ2$Item, pattern = "_")
univ2$Item <- as.numeric(univ2$Item)
#Getting overall frequencies ----
univ2 <- univ2 %>%
mutate(selected = ifelse(Rank != 0, 1, 0))
univ2$Group2 <- as.factor(univ2$Group2)
univ2$Item <- as.factor(univ2$Item)
str(univ2)
labelsItems<-c(
"1" = "Epistemic Humility",
"2" = "Open-mindedness\nDiverse perspectives",
"3" = "Equanimity\nSelf-control",
"4" = "Context-sensitivity",
"5" = "Self-transcendence",
"6" = "Deliberation\nReflection",
"7" ="Realization of\nshared humanity",
"8" = "Pursuit of truth",
"9" = "In-group cooperation",
"10" = "Sympathy\ncompassion",
"11" = "Balance diverse interests",
"12" = "Experiential knowledge",
"13" = "Uncertainty management",
"14" ="Declarative (book) knowledge",
"15" = "Seeking Insight\nMeaning",
"16" = "Self-compassion",
"17" = "Humor" )
universal.total.Summary<-univ2 %>%
group_by(Item) %>%
summarise(Prop = sum(selected, na.rm=T)/length(unique(ResponseId))) %>%
mutate(Percent = Prop*100) %>%
ungroup() %>%  arrange(Percent) %>%
mutate(Item=factor(Item, levels=Item)) %>%
ggplot(aes(x=Item, y=Percent)) +
geom_point(size=3) +   # Draw points
geom_segment(aes(x=Item,
xend=Item,
y=min(Percent),
yend=max(Percent)),
linetype="dashed",
size=0.1) + theme_minimal()+  # Draw dashed lines
coord_flip()+scale_color_aaas()+scale_x_discrete(labels=labelsItems, name="")
print(universal.total.Summary)
universal.total.Summary<-univ2 %>%
group_by(Item) %>%
summarise(Prop = sum(selected, na.rm=T)/length(unique(ResponseId))) %>%
mutate(Percent = Prop*100) %>%
ungroup() %>%  arrange(Percent) %>%
mutate(Item=factor(Item, levels=Item)) %>%
ggplot(aes(x=Item, y=Percent)) +
geom_point(size=3) +   # Draw points
geom_segment(aes(x=Item,
xend=Item,
y=min(Percent),
yend=max(Percent)),
linetype="dashed",
size=0.1) + theme_minimal()+  # Draw dashed lines
coord_flip()+scale_color_aaas()+scale_x_discrete(labels=labelsItems, name="")
print(universal.total.Summary)
universal.bygroup.Summary<-univ2 %>%
group_by(Group2,Item) %>%
summarise(Prop = mean(selected, na.rm=T)) %>%
mutate(Percent = Prop*100) %>% ungroup() %>%  arrange(Group2,Percent) %>% group_by(Group2) %>%
mutate(Item=factor(Item, levels=Item)) %>%
ggplot(aes(x=Item, y=Percent, color=Group2)) +
geom_point(size=3) +   # Draw points
geom_segment(aes(x=Item,
xend=Item,
y=min(Percent),
yend=max(Percent)),
linetype="dashed",
size=0.1) + theme_minimal()+ facet_wrap(vars(Group2))+
coord_flip()+scale_color_aaas()+scale_x_discrete(labels=labelsItems, name="")+theme(legend.position="none")
culture.by.group <- univ2 %>%
group_by(Group2,Item) %>%
summarise(Prop = mean(selected, na.rm=T)) %>%
mutate(Percent = Prop*100) %>%
# 1. Remove grouping
ungroup() %>%
# 2. Arrange by
#   i.  facet group
#   ii. bar height
arrange(Group2, Percent) %>%
# 3. Add order column of row numbers
mutate(order = row_number()) %>% mutate(Item=recode_factor(Item, "1" = "Epistemic Humility",
"2" = "Open-mindedness\nDiverse perspectives",
"3" = "Equanimity\nSelf-control",
"4" = "Context-sensitivity",
"5" = "Self-transcendence",
"6" = "Deliberation\nReflection",
"7" ="Realization of\nshared humanity",
"8" = "Pursuit of truth",
"9" = "In-group cooperation",
"10" = "Sympathy\ncompassion",
"11" = "Balance diverse interests",
"12" = "Experiential knowledge",
"13" = "Uncertainty management",
"14" ="Declarative (book) knowledge",
"15" = "Seeking Insight\nMeaning",
"16" = "Self-compassion",
"17" = "Humor" ))
#lollipop chart
culture.by.group %>% ggplot(aes(x=order, y=Percent, color=Group2)) +
geom_point(size=3) +
geom_segment(aes(x=order,
xend=order,
y=0,
yend=Percent)) +facet_wrap(vars(Group2), scales = "free")+
scale_x_continuous(   # Add categories to axis
breaks = culture.by.group$order,
labels = culture.by.group$Item)+theme_minimal(base_size = 14) +theme(legend.position="none")+
scale_color_aaas()+theme(axis.text.x = element_text(angle=90, vjust=0.5))
culture.by.group %>% ggplot(aes(x=order, y=Percent, color=Group2)) +
geom_point(size=3) +
geom_segment(aes(x=order,
xend=order,
y=0,
yend=Percent)) +facet_wrap(vars(Group2), scales = "free")+
scale_x_continuous(   # Add categories to axis
breaks = culture.by.group$order,
labels = culture.by.group$Item)+theme_minimal(base_size = 14) +theme(legend.position="none")+
scale_color_aaas()+theme(axis.text.x = element_text(angle=90, vjust=0.5))
#lollipop chart
culture.by.group %>% ggplot(aes(x=order, y=Percent, color=Group2)) +
geom_point(size=3) +
geom_segment(aes(x=order,
xend=order,
y=0,
yend=Percent)) +facet_wrap(vars(Group2), scales = "free")+
scale_x_continuous(   # Add categories to axis
breaks = culture.by.group$order,
labels = culture.by.group$Item)+theme_minimal(base_size = 14) +theme(legend.position="none")+
scale_color_aaas()+theme(axis.text.x = element_text(angle=90, vjust=0.5))+labs(x="")
culture.by.group %>% ggplot(aes(x=order, y=Percent, color=Group2)) +
geom_point(size=3) +
geom_segment(aes(x=order,
xend=order,
y=0,
yend=Percent)) +facet_wrap(vars(Group2), scales = "free")+
scale_x_continuous(   # Add categories to axis
breaks = culture.by.group$order,
labels = culture.by.group$Item)+theme_minimal(base_size = 14) +theme(legend.position="none")+
scale_color_aaas()+theme(axis.text.x = element_text(angle=90, vjust=0.5))+labs(x="")
culture.by.group %>% ggplot(aes(x=order, y=Percent, color=Group2)) +
geom_point(size=3) +
geom_segment(aes(x=order,
xend=order,
y=0,
yend=Percent)) +facet_wrap(vars(Group2), scales = "free")+
scale_x_continuous(   # Add categories to axis
breaks = culture.by.group$order,
labels = culture.by.group$Item)+theme_minimal(base_size = 14) +theme(legend.position="none")+
scale_color_aaas()+theme(axis.text.x = element_text(angle=90, vjust=0.5))+labs(x="")+ coord_flip()
#Getting Ranks ----
univ2$Rank <- as.numeric(univ2$Rank)
univ2 <- univ2 %>%
mutate(Rank_place = ifelse(Rank != 0, Rank, 18))
culture.by.group.ranked <- univ2 %>%
group_by(Group2,Item) %>%
summarise(Rank = mean(Rank_place, na.rm=T))  %>%
# 1. Remove grouping
ungroup() %>%
# 2. Arrange by
#   i.  facet group
#   ii. bar height
arrange(Group2, desc(Rank)) %>%
# 3. Add order column of row numbers
mutate(order = row_number()) %>% mutate(Item=recode_factor(Item, "1" = "Epistemic Humility",
"2" = "Open-mindedness\nDiverse perspectives",
"3" = "Equanimity\nSelf-control",
"4" = "Context-sensitivity",
"5" = "Self-transcendence",
"6" = "Deliberation\nReflection",
"7" ="Realization of\nshared humanity",
"8" = "Pursuit of truth",
"9" = "In-group cooperation",
"10" = "Sympathy\ncompassion",
"11" = "Balance diverse interests",
"12" = "Experiential knowledge",
"13" = "Uncertainty management",
"14" ="Declarative (book) knowledge",
"15" = "Seeking Insight\nMeaning",
"16" = "Self-compassion",
"17" = "Humor" ))
#lollipop chart
culture.by.group.ranked %>% ggplot(aes(x=order, y=Rank, color=Group2)) +
geom_point(size=3) +
geom_segment(aes(x=order,
xend=order,
y=0,
yend=Rank)) +facet_wrap(vars(Group2), scales = "free")+
scale_x_continuous(   # Add categories to axis
breaks = culture.by.group.ranked$order,
labels = culture.by.group.ranked$Item)+theme_minimal(base_size = 14) +theme(legend.position="none")+
scale_color_aaas()+theme(axis.text.x = element_text(angle=90, vjust=0.5))+labs(y="Average Rank (1-18)",x="")+ coord_flip()
culture.by.group.ranked %>% ggplot(aes(x=order, y=Rank, color=Group2)) +
geom_point(size=3) +
geom_segment(aes(x=order,
xend=order,
y=0,
yend=Rank)) +facet_wrap(vars(Group2), scales = "free")+
scale_x_continuous(   # Add categories to axis
breaks = culture.by.group.ranked$order,
labels = culture.by.group.ranked$Item)+theme_minimal(base_size = 14) +theme(legend.position="none")+
scale_color_aaas()+theme(axis.text.x = element_text(angle=90, vjust=0.5))+labs(y="Average Rank (1-18)",x="")+ coord_flip()
